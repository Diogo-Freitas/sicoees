<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="brMenu.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AH//AAH//4AB///wB///+Af///gD///wA///8AH//+AB///gAf//wAH//8AB///AAf//wAH//8AA///A
        AP//wAH//+AD///wB///+B///////w==
</value>
  </data>
</root>